name: Publish

on:
    push:
        tags:
            - "v*"

env:
    CARGO_INCREMENTAL: 0
    CARGO_TERM_COLOR: "always"
    RUST_LOG: "off"

jobs:
    publish-crates:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: |
                  cargo publish -p ncm_core --token ${CRATES_TOKEN}
                  cargo publish -p ncm_meta --token ${CRATES_TOKEN}
                  cargo publish -p ncmc --token ${CRATES_TOKEN}
              env:
                  CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

    publish-github-release:
        if: startsWith(github.ref, 'refs/tags/v')
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      archive-name: win32-x64

                    - os: windows-latest
                      target: i686-pc-windows-msvc
                      archive-name: win32-i686

                    - os: windows-latest
                      target: aarch64-pc-windows-msvc
                      archive-name: win32-arm64

                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-musl
                      archive-name: linux-x64
                      cross: true

                    - os: ubuntu-latest
                      target: aarch64-unknown-linux-musl
                      archive-name: linux-arm64
                      cross: true

                    - os: ubuntu-latest
                      target: riscv64gc-unknown-linux-gnu
                      archive-name: linux-riscv64
                      extra-toolchain: gcc-riscv64-linux-gnu

                    - os: ubuntu-latest
                      target: loongarch64-unknown-linux-gnu
                      archive-name: linux-loongarch64

                    - os: ubuntu-latest
                      target: armv7-unknown-linux-musleabihf
                      archive-name: linux-armv7
                      cross: true

                    - os: ubuntu-latest
                      target: arm-unknown-linux-musleabi
                      archive-name: linux-armv6
                      cross: true

                    - os: ubuntu-latest
                      target: wasm32-wasi
                      archive-name: wasm32-wasi

                    - os: macos-latest
                      target: x86_64-apple-darwin
                      archive-name: macos-x64

                    - os: macos-latest
                      target: aarch64-apple-darwin
                      archive-name: macos-arm64

        name: Package ${{ matrix.archive-name }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust toolchain
              run: rustup target add ${{ matrix.target }}

            - name: Install extra toolchain
              if: matrix.extra-toolchain
              run: |
                  sudo apt-get update
                  sudo apt-get install -y ${{ matrix.extra-toolchain }}

            - name: Install extra toolchain
              if: matrix.target == 'loongarch64-unknown-linux-gnu'
              run: |
                  mkdir ${{ runner.tool_cache }}/larch
                  wget -O- -q https://github.com/loongson/build-tools/releases/download/2023.08.08/CLFS-loongarch64-8.1-x86_64-cross-tools-gcc-glibc.tar.xz | tar -C ${{ runner.tool_cache }}/larch --strip-components=1 --xz -xf -

                  for i in objdump objcopy strip; do
                      ln -sf ${{ runner.tool_cache }}/larch/bin/loongarch64-unknown-linux-gnu-$i ${{ runner.tool_cache }}/loongarch64-linux-gnu-$i
                  done

                  echo '${{ runner.tool_cache }}/larch/bin/loongarch64-unknown-linux-gnu-gcc -L${{ runner.tool_cache }}/larch/loongarch64-unknown-linux-gnu "$@"' > ${{ runner.tool_cache }}/loongarch64-linux-gnu-gcc
                  echo '${{ runner.tool_cache }}/larch/bin/loongarch64-unknown-linux-gnu-g++ -L${{ runner.tool_cache }}/larch/loongarch64-unknown-linux-gnu "$@"' > ${{ runner.tool_cache }}/loongarch64-linux-gnu-g++
                  chmod 755 ${{ runner.tool_cache }}/loongarch64-linux-gnu-{gcc,g++}
                  echo ${{ runner.tool_cache }} >> $GITHUB_PATH

            - name: Cache
              uses: Swatinem/rust-cache@v2
              with:
                  shared-key: release-${{ matrix.target }}

            - name: Build Binary
              if: matrix.cross
              run: |
                  pip install cargo-zigbuild
                  cargo zigbuild --release --target ${{ matrix.target }} -p ncmc

            - name: Build Binary
              if: matrix.cross != true
              # strip debug symbols from std, see https://github.com/johnthagen/min-sized-rust#remove-panic-string-formatting-with-panic_immediate_abort
              run: cargo build --release --target ${{ matrix.target }} -p ncmc

              # The binary is zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
            - name: Archive Binary
              if: runner.os == 'Windows'
              shell: bash
              run: |
                  BIN_NAME=ncmc-${{ matrix.archive-name }}
                  mv target/${{ matrix.target }}/release/ncmc.exe .
                  7z a $BIN_NAME.zip ncmc.exe

              # The binary is zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
            - name: Archive Binary
              if: runner.os != 'Windows' && matrix.target != 'wasm32-wasi'
              run: |
                  BIN_NAME=ncmc-${{ matrix.archive-name }}
                  mv target/${{ matrix.target }}/release/ncmc .
                  tar czf $BIN_NAME.tar.gz ncmc

            - name: Archive Binary
              if: matrix.target == 'wasm32-wasi'
              run: |
                  BIN_NAME=ncmc-${{ matrix.archive-name }}
                  mv target/${{ matrix.target }}/release/ncmc.wasm .
                  tar czf $BIN_NAME.tar.gz ncmc.wasm

            - name: Upload Binary
              uses: actions/upload-artifact@v3
              with:
                  if-no-files-found: error
                  name: binaries
                  path: |
                      *.zip
                      *.tar.gz

            - name: Release
              uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
              with:
                  files: |
                      *.zip
                      *.tar.gz
